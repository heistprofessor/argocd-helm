version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
  pre_build:
    commands:
      - echo "Installing dependencies..."
      - pip install -r requirements.txt
  build:
    commands:
      - echo "Running tests..."
      - echo "Building Docker image..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/hotel-app:latest" .
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/hotel-app:latest"
  post_build:
    commands:
      - echo "Build completed successfully!"
artifacts:
  files:
    - '**/*'

***************************************************************************************************************************

version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t my-app .
      - docker tag my-app:latest $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/my-app:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/my-app:latest


---------------------------------------------------------------------------------------------------------------------------------

version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - TIMESTAMP=$(date +%Y%m%d%H%M%S)
      - echo Building the Docker image...
      - docker build -t my-app:$TIMESTAMP .
      - docker tag my-app:$TIMESTAMP $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/my-app:$TIMESTAMP
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/my-app:$TIMESTAMP
      - echo $TIMESTAMP > image-tag.txt
artifacts:
  files:
    - image-tag.txt


#!/bin/bash

# Load the new image tag
NEW_IMAGE_TAG=$(cat image-tag.txt)

# Clone the Git repository
git clone https://your-git-repo-url.git
cd your-repo
git checkout your-branch

# Update the Helm values file
sed -i "s/tag: .*/tag: $NEW_IMAGE_TAG/" path/to/your/values.yaml

# Commit and push the changes
git config --global user.name "your-username"
git config --global user.email "your-email"
git add path/to/your/values.yaml
git commit -m "Update image tag to $NEW_IMAGE_TAG"
git push origin your-branch

CODEBUILD_SRC_DIR=/codebuild/output/src1036142442/src
YAML location is /codebuild/readonly/buildspec.yml
/codebuild/output/src588635522/src/target/AWS
java -jar AWS.war

AWA31C429A88